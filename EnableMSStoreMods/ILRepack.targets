<Project>
	<Target Name="ILRepacker" AfterTargets="Build" Condition="$(Configuration.Contains('Release'))">
		<ItemGroup>
			<InputAssemblies Include="$(OutputPath)$(TargetName)$(TargetExt)" />
			<InputAssemblies Include="$(OutputPath)*.dll" Exclude="$(OutputPath)$(TargetName)$(TargetExt)" />
		</ItemGroup>


		<RemoveDuplicates
			Inputs="@(InputAssemblies)">
			<Output
				TaskParameter="Filtered"
				ItemName="FilteredInputAssemblies" />
		</RemoveDuplicates>

		<ILRepack
			Parallel="true"
			DebugInfo="false"
			AllowDuplicateResources="false"
			InputAssemblies="@(FilteredInputAssemblies)"
			TargetKind="SameAsPrimaryAssembly"
			KeyFile="$(KeyFile)"
			OutputFile="$(OutputPath)$(TargetName)$(TargetExt)"
			LibraryPath="$(OutputPath)"
			Union="true" />
	</Target>
	<Target
		AfterTargets="ILRepacker"
		Name="CleanReferenceCopyLocalPathsILRepacker"
		Condition="$(Configuration.Contains('Release')) and '$(ClearOutputDirectory)' != 'False'">
		<Delete Files="@(ReferenceCopyLocalPaths->'$(OutDir)%(DestinationSubDirectory)%(Filename)%(Extension)')" />
		<ItemGroup>
			<Directories
				Include="$([System.IO.Directory]::GetDirectories('$(OutDir)%(DestinationSubDirectory)', '*', System.IO.SearchOption.AllDirectories))" />
			<Directories>
				<Files>$([System.IO.Directory]::GetFiles("%(Directories.Identity)", "*", System.IO.SearchOption.AllDirectories).get_Length())</Files>
			</Directories>
		</ItemGroup>
		<RemoveDir Directories="@(Directories)" Condition="%(Files)=='0'" />
	</Target>

</Project>