<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.8" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<!-- https://github.com/moozzyk/MSBuild-Tasks -->

	<UsingTask
		TaskName="Zip"
		TaskFactory="RoslynCodeTaskFactory"
		AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
		<ParameterGroup>
			<InputFileNames ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
			<OutputFileName ParameterType="System.String" Required="true" />
			<OverwriteExistingFile ParameterType="System.Boolean" Required="false" />
			<CompressionLevel ParameterType="System.String" Required="false" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System.IO.Compression" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[        
        var fileMode = OverwriteExistingFile ? FileMode.Create : FileMode.CreateNew;
		var compressionLevel = Enum.TryParse(CompressionLevel, true, out System.IO.Compression.CompressionLevel compressLvl) ? compressLvl : System.IO.Compression.CompressionLevel.Fastest;
        using (var archive = new ZipArchive(new FileStream(OutputFileName, fileMode), ZipArchiveMode.Create))
        {
            foreach (var inputFileName in InputFileNames.Select(f => f.ItemSpec))
            {
                var archiveEntry = archive.CreateEntry(Path.GetFileName(inputFileName), compressionLevel);
                using (var fs = new FileStream(inputFileName, FileMode.Open))
                {
                    using (var zipStream = archiveEntry.Open())
                    {
                        fs.CopyTo(zipStream);
                    }
                }
            }
        }
      ]]>
			</Code>
		</Task>
	</UsingTask>

	<UsingTask
		TaskName="ZipDir"
		TaskFactory="RoslynCodeTaskFactory"
		AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
		<ParameterGroup>
			<InputBaseDirectory ParameterType="System.String" Required="true" />
			<OutputFileName ParameterType="System.String" Required="true" />
			<OverwriteExistingFile ParameterType="System.Boolean" Required="false" />
			<IncludeBaseDirectory ParameterType="System.Boolean" Required="false" />
			<CompressionLevel ParameterType="System.String" Required="false" />
		</ParameterGroup>
		<Task>
			<Reference Include="System.IO.Compression.FileSystem" />
			<Using Namespace="System.IO.Compression" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
		var compressionLevel = Enum.TryParse(CompressionLevel, true, out System.IO.Compression.CompressionLevel compressLvl) ? compressLvl : System.IO.Compression.CompressionLevel.Fastest;
        if (File.Exists(OutputFileName))
        {
            if (!OverwriteExistingFile)
            {
                return false;
            }
            File.Delete(OutputFileName);
        }
        ZipFile.CreateFromDirectory
        (
            InputBaseDirectory, OutputFileName, 
            compressionLevel, IncludeBaseDirectory
        );
      ]]>
			</Code>
		</Task>
	</UsingTask>

</Project>
